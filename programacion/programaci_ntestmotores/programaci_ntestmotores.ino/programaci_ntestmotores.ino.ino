// This file is automatically generated by the Open Roberta Lab.

#include <math.h>
#include <Servo.h>
#include <LiquidCrystal.h>
//#include <RobertaFunctions.h>   // Open Roberta library

//RobertaFunctions rob;

double grados;
double distancia;
int _led_IN1 = A1;
int _led_IN2 = A2;
int _led_IN3 = A3;
int _led_IN4 = A4;
int _led_ENAIZQ = 5;
int _led_ENBDER = 3;
int _TMP36_S3 = A0;
Servo _servo_S2;
int _trigger_S = A5;
int _echo_S = 7;
double _signalToDistance = 0.03432/2;


LiquidCrystal _lcd_L2(13, 12, 10, 9, 4, 2);



double templm35(double tmp) {
    tmp = tmp * ( 500 / ((float) 1023) );
    return tmp;
}

void motorDobleTorcion(String direccion, double velocidadIzq, double velocidadDer, String orientacion) {
    if ( direccion == "adelante" ) {
        adelante();
        analogWrite(_led_ENAIZQ, velocidadIzq);
        analogWrite(_led_ENBDER, velocidadDer);
    } else if ( direccion == "atras" ) {
        atras();
        analogWrite(_led_ENAIZQ, velocidadIzq);
        analogWrite(_led_ENBDER, velocidadDer);
    }

}
void atras() {
    digitalWrite(A1, 0);
    digitalWrite(A2, 1);
    digitalWrite(A3, 0);
    digitalWrite(A4, 1);
}
void adelante() {
  digitalWrite(_led_IN1, 1);
  digitalWrite(_led_IN2, 0);
  digitalWrite(_led_IN3, 1);
  digitalWrite(_led_IN4, 0);
}

double _getUltrasonicDistance()
{
    digitalWrite(_trigger_S, LOW);
    delay(5);
    digitalWrite(_trigger_S, HIGH);
    delay(10);
    digitalWrite(_trigger_S, LOW);
    return pulseIn(_echo_S, HIGH)*_signalToDistance;
}

void setup()
{
    Serial.begin(9600);
    _lcd_L2.begin(16, 2);
    _servo_S2.attach(11);
    pinMode(_led_IN1, OUTPUT);
    pinMode(_led_IN2, OUTPUT);
    pinMode(_led_IN3, OUTPUT);
    pinMode(_led_IN4, OUTPUT);
    pinMode(_led_ENAIZQ, OUTPUT);
    pinMode(_led_ENBDER, OUTPUT);
    pinMode(_trigger_S, OUTPUT);
    pinMode(_echo_S, INPUT);
    grados = 0;
    distancia = 0;
}

void loop()
{
    distancia = _getUltrasonicDistance();
    delay(100);
    _lcd_L2.setCursor(0,0);
    _lcd_L2.print(distancia);
    if ( distancia >= 20 ) {
        _servo_S2.write(90);
        delay(500);
    } else if ( distancia < 20 ) {
        _servo_S2.write(0);
        delay(500);
    }
    motorDobleTorcion("atras", 255, 255, "izq");
  delay(1000);
  motorDobleTorcion("adelante", 200, 200, "izq");
  delay(1000);
  
}
